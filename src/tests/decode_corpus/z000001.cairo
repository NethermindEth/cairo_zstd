use cairo_zstd::utils::byte_array::U8SpanIntoByteArray;

fn get_compressed() -> ByteArray {
    array![
        0x28, 0xB5, 0x2F, 0xFD, 0x04, 0x57, 0xA0, 0x00, 0x00, 0x64, 0x28, 0xCA,
        0x9F, 0xEF, 0x1A, 0xF7, 0x2F, 0xBA, 0xCC, 0xF2, 0xB3, 0xD1, 0xED, 0x12,
        0xDF, 0xC2, 0x42, 0x70, 0x6C, 0x10, 0x00, 0x00, 0x15, 0xC5, 0x02, 0x00,
        0x00, 0x63, 0x08, 0x00, 0x00, 0x36, 0x09, 0x00, 0x00, 0x70, 0xEB, 0x85,
        0x31, 0x6C
    ]
        .span()
        .into()
}

fn get_data() -> ByteArray {
    array![
        0x64, 0x28, 0xCA, 0x9F, 0xEF, 0x1A, 0xF7, 0x2F, 0xBA, 0xCC, 0xF2, 0xB3,
	    0xD1, 0xED, 0x12, 0xDF, 0xC2, 0x42, 0x70, 0x6C, 0x15, 0xC5, 0x36, 0x70
    ].span().into()
}
